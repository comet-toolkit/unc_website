"""unc_website.source.make_spec_version_toc - module containing function to build TOC page for different specification versions"""

from os import listdir
from os.path import isdir
from os.path import join as pjoin


__author__ = "Sam Hunt <sam.hunt@npl.co.uk>"
__all__ = ["make_spec_version_toc"]


# Spec TOC filename
SPEC_FNAME = "spec_toc.rst"

# URL of folder where PDFs are stored
PDF_URL = "https://comet-toolkit.github.io/unc_website/_static"

# Static page content elements
HEADER = ("======================================\n"
          "Uncertainty Metadata Conventions (UNC)\n"
          "======================================\n\n")

WEB_VERS_SUBHEADER = ("Web Versions\n"
                      "------------\n\n"
                      ".. toctree::\n"
                      "   :maxdepth: 1\n\n")

PDF_VERS_SUBHEADER = ("PDF Versions\n"
                      "------------\n\n")


def make_spec_version_toc(spec_dir: str):
    """
    Produces "spec_toc.rst" in `spec_dir` - containing TOC for spec versions and links to PDF versions

    :param spec_dir: directory containing specification versions
    """

    toc_path = pjoin(spec_dir, SPEC_FNAME)
    page_content = ""

    # add header
    page_content += HEADER

    # each version of the spec is a separate folder in the spec_dir
    spec_vers = [f for f in listdir(spec_dir) if isdir(pjoin(spec_dir, f))]
    spec_vers_toc_paths = [f"{f}/unc_specification" for f in spec_vers]
    spec_vers_urls = [f"{PDF_URL}/{f}/unc_specification.pdf" for f in spec_vers]

    # add web version TOC
    page_content += WEB_VERS_SUBHEADER

    for spec_ver, spec_vers_toc_path in zip(spec_vers, spec_vers_toc_paths):
        page_content += f"   {spec_ver} <{spec_vers_toc_path}>\n"
    page_content += "\n"

    # add links to PDF versions generated by GitHub workflow
    page_content += PDF_VERS_SUBHEADER

    for spec_ver, spec_vers_url in zip(spec_vers, spec_vers_urls):
        page_content += f"`{spec_ver} <{spec_vers_url}>`_\n"

    with open(toc_path, "w") as f:
        f.write(page_content)


if __name__ == "__main__":
    make_spec_version_toc("source/specification")